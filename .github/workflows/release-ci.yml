name: Release Pipeline

on:
  push:
    tags: ["v*"]

jobs:
  style:
    uses: ./.github/workflows/style.yml

  test:
    needs: [style]
    uses: ./.github/workflows/test.yml

  build_pyinstaller:
    needs: [test]
    uses: ./.github/workflows/build_pyinstaller.yml

  build_nuitka:
    needs: [test]
    uses: ./.github/workflows/build_nuitka.yml

  build_wheel:
    needs: [test]
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up Python environment"
        uses: ./.github/actions/setup-python

      - name: "Build dcspy wheel package"
        shell: bash
        run: |
          python -m build
          python -m twine check dist/*

  github:
    needs: [build_pyinstaller, build_nuitka, build_wheel]
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up Python environment"
        uses: ./.github/actions/setup-python

      - name: "Download dcspy binaries"
        uses: actions/download-artifact@v4
        with:
          name: dcspy_binaries

      - name: "Release Notes"
        id: version
        run: |
          $dcspy_ver = python scripts/latest_tag.py . 0
          Write-Output "number=$dcspy_ver" >> $env:GITHUB_OUTPUT
          $changelog = Get-Content .\CHANGELOG.md
          $last_change = ($changelog | Select-String -Pattern "^##\s" | Select-Object -Skip 1 -First 1).LineNumber - 3
          ($changelog | Select-Object -First $last_change -Skip 1) -join "`n" | Out-File .\RELEASENOTES.md

      - name: "Create Release"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PYI_REL_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: dcspy ${{ steps.version.outputs.number }}
          body_path: RELEASENOTES.md
          draft: false
          prerelease: false
          files: |
            dcspy.exe
            dcspy_cli.exe
            dcspy-${{ steps.version.outputs.number }}-py3-none-any.whl
            dcspy-${{ steps.version.outputs.number }}.tar.gz
            dcspy_nuitka.exe
            dcspy.zip

  pypi:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up Python environment"
        uses: ./.github/actions/setup-python

      - name: "Download dcspy binaries"
        uses: actions/download-artifact@v4
        with:
          name: dcspy_binaries

      - name: "Publish dcspy to PyPI"
        run: |
          mkdir dist
          mv *.whl *.tar.gz dist/
          ls -la dist/
